version: "3.8"

networks:
  weather-network:
    driver: bridge

volumes:
  postgres-data:
    name: weather-data

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres-container
    ports:
      - "5432:5432"
    networks:
      - weather-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:alpine
    container_name: redis-container
    command: redis-server --protected-mode no
    ports:
      - "6379:6379"
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: weather-app
    container_name: weather-app-container
    ports:
      - '9200:9200'
    networks:
      - weather-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    restart: always